@page
@{
    Layout = "_Layout";
}

@{
    <style scoped>
        :root {
            --left-width: 200px;
        }

        .left-col {
            float: left;
            width: var(--left-width);
            height: 100%;
        }

        .fix-left-bar {
            position: fixed;
            background-color: whitesmoke;
            width: var(--left-width);
            height: var(--container-height);
        }

        .right-col {
            float: left;
            width: calc(100% - 200px);
            height: 100%;
        }

        .gateway-card-container {
            padding: 5px;
            display: flex;
            flex-wrap: wrap;
            justify-content: safe center;
            overflow-x: hidden;
        }

        .gateway-card {
            width: 220px;
            height: 250px;
            margin: 7px;
            padding: 5px;
            display: inline-block;
            vertical-align: top;
            cursor: pointer;
        }

            .gateway-card:hover {
                box-shadow: 0 6.4px 14.4px 0 rgba(0,0,0,.132),0 1.2px 3.6px 0 rgba(0,0,0,.108);
            }
    </style>

    <script src="@Url.Content("~/statics/js/GatewayCard.js")"></script>
    <script>
        axios.defaults.timeout = 1000
        function UpdateGatewayState() {
            axios.post("@Url.Action("getGateWayList" , "CloudService" , null)", {})
                .then(function (response) {
                    document.getElementById("loader").style.display = "none";
                    UpdateComponents(response.data);
                })
                .catch(function (error) {
                    document.getElementById("loader").style.display = "";
                });
        }
        const gatewayCards = {}
        function UpdateComponents(datas) {
            const container = document.getElementById("gateway-card-container");
            console.log(datas);
            datas.forEach(data => {
                const gatewayId = data['gateWayId'];
                let gatewayCard = gatewayCards[gatewayId];
                if (!gatewayCard) {
                    gatewayCard = gatewayCards[gatewayId] = document.createElement("gateway-card");
                    container.appendChild(gatewayCard);
                }

                let state;
                if (!data['isActive']) {
                    gatewayCard.iconColor = "yellow"
                    state = "失去連線"
                }
                else if (data['isAlarm']) {
                    gatewayCard.iconColor = "red"
                    state = "警報中"
                }
                else {
                    gatewayCard.iconColor = "green"
                    state = "正常"
                }

                var updateTime = new Date(data['updateTime']);
                var nowTime = new Date();
                const timeInterval = nowTime.getTime() - updateTime.getTime();

                const info = [
                    { key: "編號", value: data['gateWayId'] },
                    { key: "狀態", value: state },
                    { key: "緯度", value: data['latitude'] },
                    { key: "經度", value: data['longitude'] },
                    { key: "更新時間", value: `${parseInt(timeInterval / 1000 )}秒前` },
                ];
                gatewayCard.setInformation(info);
            });
        }
    </script>
}

<div id="gateway-card-container" class="gateway-card-container">
</div>

<div id="loader" class='loader' style="display:none" >
    <div class="bg"></div>
    <div class='circle'></div>
    <div class='circle'></div>
    <div class='circle'></div>
    <div class='circle'></div>
    <div class='circle'></div>
</div>

<script>
    setInterval(function () {
        UpdateGatewayState()
    }, 1000);
</script>